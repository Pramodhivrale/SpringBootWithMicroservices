package com.data;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.web.bind.annotation.RestController;

import jakarta.security.auth.message.callback.PrivateKeyCallback.Request;

@Configuration
@EnableWebSecurity
public class SecurityConfiguration 
{
	 @Bean
	    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
	        return http
	            .authorizeRequests(authorizeRequests ->
	                authorizeRequests
	                    .antMatchers("/", "/login-check", "/contact", "/swagger-ui.html").permitAll() // Permit access to specified endpoints
	                    .antMatchers("/admin/**").hasRole("ADMIN") // Example: Require ADMIN role for URLs starting with /admin/
	                    .anyRequest().authenticated() // Require authentication for any other request
	            )
	            .formLogin() // Configure form-based login
	            .and()
	            .build(); // Build the SecurityFilterChain
		return http.build();
	}

}
